<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='week11_15844108290310' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='gdp-vs-happiness' inline='true' name='federated.1j8bnci0nywj411avr38x1oewj6x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='gdp-vs-happiness' name='textscan.13q90vt0zt29vi1dw2wlf1eu9qpo'>
            <connection class='textscan' directory='C:/Users/aleja/Downloads' filename='gdp-vs-happiness.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Region LookUp' name='excel-direct.1bb7ueu06ttr9k15itkhr1uwr6b7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/aleja/Downloads/Region LookUp.xlsx' interpretationMode='0' password='' port='0' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.13q90vt0zt29vi1dw2wlf1eu9qpo' name='gdp-vs-happiness.csv' table='[gdp-vs-happiness#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='GDP per capita (constant 2011 international $)' ordinal='3' />
            <column datatype='real' name='Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))' ordinal='4' />
            <column datatype='integer' name='F6' ordinal='5' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[gdp-vs-happiness.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[gdp-vs-happiness.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[gdp-vs-happiness.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[gdp-vs-happiness.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per capita (constant 2011 international $)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per capita (constant 2011 international $)]</local-name>
            <parent-name>[gdp-vs-happiness.csv]</parent-name>
            <remote-alias>GDP per capita (constant 2011 international $)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))]</local-name>
            <parent-name>[gdp-vs-happiness.csv]</parent-name>
            <remote-alias>Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[gdp-vs-happiness.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Code]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Code]' derivation='Attribute' name='[attr:Code:nk]' pivot='key' type='nominal' />
      <column-instance column='[Code]' derivation='None' name='[none:Code:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='YEAR' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Year:ok]' member='2005' />
          <groupfilter function='member' level='[none:Year:ok]' member='2006' />
          <groupfilter function='member' level='[none:Year:ok]' member='2007' />
          <groupfilter function='member' level='[none:Year:ok]' member='2008' />
          <groupfilter function='member' level='[none:Year:ok]' member='2009' />
          <groupfilter function='member' level='[none:Year:ok]' member='2010' />
          <groupfilter function='member' level='[none:Year:ok]' member='2011' />
          <groupfilter function='member' level='[none:Year:ok]' member='2012' />
          <groupfilter function='member' level='[none:Year:ok]' member='2013' />
          <groupfilter function='member' level='[none:Year:ok]' member='2014' />
          <groupfilter function='member' level='[none:Year:ok]' member='2015' />
          <groupfilter function='member' level='[none:Year:ok]' member='2016' />
          <groupfilter function='member' level='[none:Year:ok]' member='2017' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/aleja/Documents/My Tableau Repository/Datasources/gdp-vs-happiness.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/17/2020 02:06:58 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='gdp-vs-happiness' increment-value='%null%' refresh-type='create' rows-inserted='48120' timestamp-start='2020-03-17 02:06:58.933' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>0</ordinal>
              <family>gdp-vs-happiness.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>470</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>gdp-vs-happiness.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>336</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>2</ordinal>
              <family>gdp-vs-happiness.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>318</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP per capita (constant 2011 international $)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP per capita (constant 2011 international $)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP per capita (constant 2011 international $)</remote-alias>
              <ordinal>3</ordinal>
              <family>gdp-vs-happiness.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11487</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))</remote-alias>
              <ordinal>4</ordinal>
              <family>gdp-vs-happiness.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2819</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F6</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F6</remote-alias>
              <ordinal>5</ordinal>
              <family>gdp-vs-happiness.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15301</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.367797' group-percentage='0.216949' measure-ordering='alphabetic' measure-percentage='0.415254' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Code:nk]' palette='traffic_light_10_0' type='palette'>
            <map to='#309143'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;TKL&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;VGB&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#428f4d'>
              <bucket>&quot;OWID_CYN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;BHS&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;FLK&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;GUF&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;IMN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;MNP&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;NRU&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;PYF&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;ESH&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;MSR&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;OWID_CIS&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;VAT&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;YEM&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;BES&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;MTQ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;OWID_KOS&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;GRL&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;SPM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;SXM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;VIR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ABW&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ASM&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;NIU&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;OWID_WRL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;SMR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;TWN&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;AIA&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;CUW&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;GIB&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;MYT&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;TLS&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;GLP&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;NCL&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;SHN&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;STP&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;TCA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;WLF&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;COK&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;FRO&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;GMB&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;REU&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Code:nk]' palette='traffic_light_10_0' type='palette'>
            <map to='#309143'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;TKL&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;VGB&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#428f4d'>
              <bucket>&quot;OWID_CYN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;BHS&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;FLK&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;GUF&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;IMN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;MNP&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;NRU&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;PYF&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;ESH&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;MSR&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;OWID_CIS&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;VAT&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;YEM&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;BES&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;MTQ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;OWID_KOS&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;GRL&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;SPM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;SXM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;VIR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ABW&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ASM&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;NIU&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;OWID_WRL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;SMR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;TWN&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;AIA&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;CUW&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;GIB&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;MYT&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;TLS&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;GLP&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;NCL&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;SHN&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;STP&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;TCA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;WLF&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;COK&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;FRO&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;GMB&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;REU&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Argentina&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Life Satisfaction vs GDP&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='gdp-vs-happiness' name='federated.1j8bnci0nywj411avr38x1oewj6x' />
          </datasources>
          <datasource-dependencies datasource='federated.1j8bnci0nywj411avr38x1oewj6x'>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='integer' name='[F6]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP per capita (constant 2011 international $)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Code]' derivation='Attribute' name='[attr:Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))]' derivation='None' name='[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[F6]' derivation='Sum' name='[sum:F6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP per capita (constant 2011 international $)]' derivation='Sum' name='[sum:GDP per capita (constant 2011 international $):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))]' derivation='Sum' name='[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1j8bnci0nywj411avr38x1oewj6x].[Set 1]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1j8bnci0nywj411avr38x1oewj6x].[Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' scope='cols' value='GDP per capita' />
            <format attr='title' class='0' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' scope='rows' value='Life satisfaction' />
            <format attr='auto-subtitle' class='0' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' scope='rows' value='true' />
            <format attr='height' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' value='70' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-width' id='annotation_1' value='0' />
            <format attr='stroke-size' id='annotation_2' value='0' />
            <format attr='line-visibility' id='annotation_2' value='off' />
            <format attr='rounding' id='annotation_2' value='none' />
            <format attr='line-end-size' id='annotation_2' value='medium' />
            <format attr='fill-color' id='annotation_2' value='#19703925' />
            <format attr='fill-color' id='annotation_1' value='#efd0612d' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' />
              <size column='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:F6:qk]' />
              <lod column='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' />
              <lod column='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' />
              <lod column='[federated.1j8bnci0nywj411avr38x1oewj6x].[attr:Code:nk]' />
              <lod column='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:</run>
                <run fontcolor='#000000'>Æ </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1j8bnci0nywj411avr38x1oewj6x].[attr:Code:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population:&#9;</run>
                <run bold='true'>&lt;[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:F6:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>GDP per capita:&#9;</run>
                <run bold='true'>&lt;[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Life satisfaction:&#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='14.547999382019043' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]</rows>
        <cols>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.1j8bnci0nywj411avr38x1oewj6x].[attr:Code:nk]</column>
          </partitionable-measures>
        </table-calculations>
        <annotations>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Æ&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#edc948' fontname='Bahnschrift SemiBold' fontsize='8' italic='true'>POOR AND UNHAPPY</run>
              <run fontalignment='0'>Æ&#10;</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='515.97269418716564'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5.4847812544510761'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='7039.8682314575008'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2.3375503287598827'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.479853' />
          </annotation>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-25'>
            <formatted-text>
              <run bold='true' fontalignment='2' fontcolor='#197039' fontname='Bahnschrift SemiBold' fontsize='8' italic='true'>RICH AND HAPPY</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='7037.6586373256177'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='8.0786528965042574'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='118307.93766240113'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5.4732529360419511'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.528947' y='0.932432' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{345C5D57-C9A9-47DD-847E-6EC0B5AD0B1E}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{65DC6C07-C7BB-4B9E-9D05-0BA03E4B9FF9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='gdp-vs-happiness' name='federated.1j8bnci0nywj411avr38x1oewj6x' />
      </datasources>
      <datasource-dependencies datasource='federated.1j8bnci0nywj411avr38x1oewj6x' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='22' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='20' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='18' type='layout-basic' w='98400' x='800' y='1000'>
                <zone h='79251' id='7' param='horz' type='layout-flow' w='98400' x='800' y='19749'>
                  <zone h='79251' id='5' type='layout-basic' w='82200' x='800' y='19749'>
                    <zone h='79251' id='3' name='Sheet 1' w='82200' x='800' y='19749'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone fixed-size='162' h='79251' id='6' is-fixed='true' param='vert' type='layout-flow' w='16200' x='83000' y='19749'>
                    <zone h='12875' id='8' mode='slider' name='Sheet 1' param='[federated.1j8bnci0nywj411avr38x1oewj6x].[Set 1]' show-all='false' type='filter' w='16200' x='83000' y='19749'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='10125' id='9' name='Sheet 1' pane-specification-id='6' param='[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' type='color' w='16200' x='83000' y='32624'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone forceUpdate='true' h='10373' id='10' type='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontname='Nirmala UI Semilight' fontsize='24'>The Richer, the </run>
                    <run bold='true' fontcolor='#197039' fontname='Nirmala UI Semilight' fontsize='24'>Happier</run>
                    <run bold='true' fontname='Nirmala UI Semilight' fontsize='24'>?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='8376' id='11' type='text' w='98400' x='800' y='11373'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Bahnschrift SemiCondensed'>Higher national incomes go together with </run>
                    <run fontcolor='#197039' fontname='Bahnschrift SemiCondensed'>higher average life satisfaction</run>
                    <run fontcolor='#000000' fontname='Bahnschrift SemiCondensed'>. Richer countries tend to have higher average self-reported life satisfaction than poorer countries that are comparable in terms of demographics and other measurable characteristics.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='23' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='10373' id='10' type='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontname='Nirmala UI Semilight' fontsize='24'>The Richer, the </run>
                    <run bold='true' fontcolor='#197039' fontname='Nirmala UI Semilight' fontsize='24'>Happier</run>
                    <run bold='true' fontname='Nirmala UI Semilight' fontsize='24'>?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='8376' id='11' type='text' w='98400' x='800' y='11373'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Bahnschrift SemiCondensed'>Higher national incomes go together with </run>
                    <run fontcolor='#197039' fontname='Bahnschrift SemiCondensed'>higher average life satisfaction</run>
                    <run fontcolor='#000000' fontname='Bahnschrift SemiCondensed'>. Richer countries tend to have higher average self-reported life satisfaction than poorer countries that are comparable in terms of demographics and other measurable characteristics.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12875' id='8' mode='slider' name='Sheet 1' param='[federated.1j8bnci0nywj411avr38x1oewj6x].[Set 1]' show-all='false' type='filter' w='16200' x='83000' y='19749'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='79251' id='3' is-fixed='true' name='Sheet 1' w='82200' x='800' y='19749'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10125' id='9' name='Sheet 1' pane-specification-id='6' param='[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' type='color' w='16200' x='83000' y='32624'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{13404700-EA47-483B-A04B-379CF8FD9696}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='69'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1j8bnci0nywj411avr38x1oewj6x].[Set 1]' show-all='false' type='filter' />
            <card pane-specification-id='6' param='[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1j8bnci0nywj411avr38x1oewj6x].[Set 1]</field>
            <field>[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Code:nk]</field>
            <field>[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]</field>
            <field>[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Year:qk]</field>
            <field>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{173FA047-CC19-4FA1-9E42-788F8A6DE8C4}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DD218852-D26D-4D5A-9C49-B40898EF84A1}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <device-preview visible='true' />
      <simple-id uuid='{1FD921CC-06A0-4226-BB8F-142ADEB5508A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      Af5/3nrS21yTgScAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
