<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DashboardGridOverlay />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='week11_15844108290310' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='gdp-vs-happiness' inline='true' name='federated.1j8bnci0nywj411avr38x1oewj6x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='gdp-vs-happiness' name='textscan.13q90vt0zt29vi1dw2wlf1eu9qpo'>
            <connection class='textscan' directory='C:/Users/aleja/Downloads' filename='gdp-vs-happiness.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Region LookUp' name='excel-direct.1bb7ueu06ttr9k15itkhr1uwr6b7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/aleja/Downloads/Region LookUp.xlsx' interpretationMode='0' password='' port='0' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.13q90vt0zt29vi1dw2wlf1eu9qpo' name='gdp-vs-happiness.csv' table='[gdp-vs-happiness#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='GDP per capita (constant 2011 international $)' ordinal='3' />
            <column datatype='real' name='Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))' ordinal='4' />
            <column datatype='integer' name='F6' ordinal='5' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[gdp-vs-happiness.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[gdp-vs-happiness.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[gdp-vs-happiness.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[gdp-vs-happiness.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per capita (constant 2011 international $)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per capita (constant 2011 international $)]</local-name>
            <parent-name>[gdp-vs-happiness.csv]</parent-name>
            <remote-alias>GDP per capita (constant 2011 international $)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))]</local-name>
            <parent-name>[gdp-vs-happiness.csv]</parent-name>
            <remote-alias>Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[gdp-vs-happiness.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Code]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Code]' derivation='Attribute' name='[attr:Code:nk]' pivot='key' type='nominal' />
      <column-instance column='[Code]' derivation='None' name='[none:Code:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='YEAR' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Year:ok]' member='2005' />
          <groupfilter function='member' level='[none:Year:ok]' member='2006' />
          <groupfilter function='member' level='[none:Year:ok]' member='2007' />
          <groupfilter function='member' level='[none:Year:ok]' member='2008' />
          <groupfilter function='member' level='[none:Year:ok]' member='2009' />
          <groupfilter function='member' level='[none:Year:ok]' member='2010' />
          <groupfilter function='member' level='[none:Year:ok]' member='2011' />
          <groupfilter function='member' level='[none:Year:ok]' member='2012' />
          <groupfilter function='member' level='[none:Year:ok]' member='2013' />
          <groupfilter function='member' level='[none:Year:ok]' member='2014' />
          <groupfilter function='member' level='[none:Year:ok]' member='2015' />
          <groupfilter function='member' level='[none:Year:ok]' member='2016' />
          <groupfilter function='member' level='[none:Year:ok]' member='2017' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/aleja/Documents/My Tableau Repository/Datasources/gdp-vs-happiness.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/17/2020 02:06:58 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='gdp-vs-happiness' increment-value='%null%' refresh-type='create' rows-inserted='48120' timestamp-start='2020-03-17 02:06:58.933' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>0</ordinal>
              <family>gdp-vs-happiness.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>470</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>gdp-vs-happiness.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>336</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>2</ordinal>
              <family>gdp-vs-happiness.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>318</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP per capita (constant 2011 international $)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP per capita (constant 2011 international $)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP per capita (constant 2011 international $)</remote-alias>
              <ordinal>3</ordinal>
              <family>gdp-vs-happiness.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11487</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))</remote-alias>
              <ordinal>4</ordinal>
              <family>gdp-vs-happiness.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2819</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F6</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F6</remote-alias>
              <ordinal>5</ordinal>
              <family>gdp-vs-happiness.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15301</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.36748' group-percentage='0.21626' measure-ordering='alphabetic' measure-percentage='0.41626' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Code:nk]' palette='traffic_light_10_0' type='palette'>
            <map to='#309143'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;TKL&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;VGB&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#428f4d'>
              <bucket>&quot;OWID_CYN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;BHS&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;FLK&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;GUF&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;IMN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;MNP&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;NRU&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;PYF&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;ESH&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;MSR&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;OWID_CIS&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;VAT&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;YEM&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;BES&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;MTQ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;OWID_KOS&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;GRL&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;SPM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;SXM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;VIR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ABW&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ASM&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;NIU&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;OWID_WRL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;SMR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;TWN&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;AIA&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;CUW&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;GIB&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;MYT&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;TLS&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;GLP&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;NCL&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;SHN&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;STP&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;TCA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;WLF&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;COK&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;FRO&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;GMB&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;REU&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Code:nk]' palette='traffic_light_10_0' type='palette'>
            <map to='#309143'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;TKL&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;VGB&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#428f4d'>
              <bucket>&quot;OWID_CYN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;BHS&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;COD&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;FLK&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;GUF&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;IMN&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;MNP&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;NRU&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;PYF&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;ESH&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;FSM&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;IRN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;MKD&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;MSR&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;OWID_CIS&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;VAT&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;YEM&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;BES&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;MTQ&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;OWID_KOS&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;RUS&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;CIV&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;GRL&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;SPM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;SXM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;VIR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ABW&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ASM&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;NIU&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;OWID_WRL&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;PRK&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;SMR&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;TWN&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;AIA&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;BRN&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;CUW&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;GIB&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;KOR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;MYT&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;TLS&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;EGY&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;GLP&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;NCL&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;SHN&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;STP&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;TCA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;WLF&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;COK&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;FRO&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;GMB&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;REU&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Argentina&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Life Satisfaction vs GDP&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='gdp-vs-happiness' name='federated.1j8bnci0nywj411avr38x1oewj6x' />
          </datasources>
          <datasource-dependencies datasource='federated.1j8bnci0nywj411avr38x1oewj6x'>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='integer' name='[F6]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP per capita (constant 2011 international $)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Code]' derivation='Attribute' name='[attr:Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))]' derivation='None' name='[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[F6]' derivation='Sum' name='[sum:F6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP per capita (constant 2011 international $)]' derivation='Sum' name='[sum:GDP per capita (constant 2011 international $):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best))]' derivation='Sum' name='[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1j8bnci0nywj411avr38x1oewj6x].[Set 1]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1j8bnci0nywj411avr38x1oewj6x].[Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' scope='cols' value='GDP per capita' />
            <format attr='title' class='0' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' scope='rows' value='Life satisfaction' />
            <format attr='auto-subtitle' class='0' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' scope='rows' value='true' />
            <format attr='height' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' value='70' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-family' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' value='Bahnschrift SemiBold' />
            <format attr='font-weight' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' value='bold' />
            <format attr='font-size' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' value='9' />
            <format attr='font-family' field='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' value='Bahnschrift SemiBold' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-width' id='annotation_1' value='0' />
            <format attr='stroke-size' id='annotation_2' value='0' />
            <format attr='line-visibility' id='annotation_2' value='off' />
            <format attr='rounding' id='annotation_2' value='none' />
            <format attr='line-end-size' id='annotation_2' value='medium' />
            <format attr='fill-color' id='annotation_2' value='#19703925' />
            <format attr='fill-color' id='annotation_1' value='#efd0612d' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' />
              <size column='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:F6:qk]' />
              <lod column='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' />
              <lod column='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]' />
              <lod column='[federated.1j8bnci0nywj411avr38x1oewj6x].[attr:Code:nk]' />
              <lod column='[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:</run>
                <run fontcolor='#000000'>Æ </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1j8bnci0nywj411avr38x1oewj6x].[attr:Code:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population:&#9;</run>
                <run bold='true'>&lt;[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:F6:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>GDP per capita:&#9;</run>
                <run bold='true'>&lt;[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Life satisfaction:&#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='14.547999382019043' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]</rows>
        <cols>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.1j8bnci0nywj411avr38x1oewj6x].[attr:Code:nk]</column>
          </partitionable-measures>
        </table-calculations>
        <annotations>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Æ&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#edc948' fontname='Bahnschrift SemiBold' fontsize='8' italic='true'>POOR AND UNHAPPY</run>
              <run fontalignment='0'>Æ&#10;</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='515.97269418716564'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5.4847812544510761'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='7039.8682314575008'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2.3375503287598827'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.479853' />
          </annotation>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-25'>
            <formatted-text>
              <run bold='true' fontalignment='2' fontcolor='#197039' fontname='Bahnschrift SemiBold' fontsize='8' italic='true'>RICH AND HAPPY</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='7019.3413862484258'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='8.0786528965042574'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='120094.5166842129'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5.4732529360419511'>
                  <node-reference>
                    <axis>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.929204' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{345C5D57-C9A9-47DD-847E-6EC0B5AD0B1E}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{65DC6C07-C7BB-4B9E-9D05-0BA03E4B9FF9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='gdp-vs-happiness' name='federated.1j8bnci0nywj411avr38x1oewj6x' />
      </datasources>
      <datasource-dependencies datasource='federated.1j8bnci0nywj411avr38x1oewj6x' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='22' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='20' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='18' type='layout-basic' w='98400' x='800' y='1000'>
                <zone h='79251' id='7' param='horz' type='layout-flow' w='98400' x='800' y='19749'>
                  <zone h='79251' id='5' type='layout-basic' w='82200' x='800' y='19749'>
                    <zone h='79251' id='3' name='Sheet 1' w='82200' x='800' y='19749'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone fixed-size='162' h='79251' id='6' is-fixed='true' param='vert' type='layout-flow' w='16200' x='83000' y='19749'>
                    <zone h='12875' id='8' mode='slider' name='Sheet 1' param='[federated.1j8bnci0nywj411avr38x1oewj6x].[Set 1]' show-all='false' type='filter' w='16200' x='83000' y='19749'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='10125' id='9' name='Sheet 1' pane-specification-id='6' param='[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' type='color' w='16200' x='83000' y='32624'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone forceUpdate='true' h='10373' id='10' type='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontname='Bahnschrift SemiBold' fontsize='24'>The Richer, the </run>
                    <run bold='true' fontcolor='#197039' fontname='Bahnschrift SemiBold' fontsize='24'>Happier</run>
                    <run bold='true' fontname='Bahnschrift SemiBold' fontsize='24'>?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='8376' id='11' type='text' w='98400' x='800' y='11373'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Bahnschrift SemiCondensed'>Higher national incomes go together with </run>
                    <run fontcolor='#197039' fontname='Bahnschrift SemiCondensed'>higher average life satisfaction</run>
                    <run fontcolor='#000000' fontname='Bahnschrift SemiCondensed'>. Richer countries tend to have higher average self-reported life satisfaction than poorer countries that are comparable in terms of demographics and other measurable characteristics.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='27' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='10373' id='10' type='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontname='Bahnschrift SemiBold' fontsize='24'>The Richer, the </run>
                    <run bold='true' fontcolor='#197039' fontname='Bahnschrift SemiBold' fontsize='24'>Happier</run>
                    <run bold='true' fontname='Bahnschrift SemiBold' fontsize='24'>?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='8376' id='11' type='text' w='98400' x='800' y='11373'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Bahnschrift SemiCondensed'>Higher national incomes go together with </run>
                    <run fontcolor='#197039' fontname='Bahnschrift SemiCondensed'>higher average life satisfaction</run>
                    <run fontcolor='#000000' fontname='Bahnschrift SemiCondensed'>. Richer countries tend to have higher average self-reported life satisfaction than poorer countries that are comparable in terms of demographics and other measurable characteristics.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12875' id='8' mode='slider' name='Sheet 1' param='[federated.1j8bnci0nywj411avr38x1oewj6x].[Set 1]' show-all='false' type='filter' w='16200' x='83000' y='19749'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='79251' id='3' is-fixed='true' name='Sheet 1' w='82200' x='800' y='19749'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10125' id='9' name='Sheet 1' pane-specification-id='6' param='[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' type='color' w='16200' x='83000' y='32624'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{13404700-EA47-483B-A04B-379CF8FD9696}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1j8bnci0nywj411avr38x1oewj6x].[Set 1]' show-all='false' type='filter' />
            <card pane-specification-id='6' param='[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1j8bnci0nywj411avr38x1oewj6x].[Set 1]</field>
            <field>[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Code:nk]</field>
            <field>[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Life satisfaction (country average; 0-10) (Cantril Ladder (0=worst; 10=best)):qk]</field>
            <field>[federated.1j8bnci0nywj411avr38x1oewj6x].[none:Year:qk]</field>
            <field>[federated.1j8bnci0nywj411avr38x1oewj6x].[sum:GDP per capita (constant 2011 international $):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{173FA047-CC19-4FA1-9E42-788F8A6DE8C4}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DD218852-D26D-4D5A-9C49-B40898EF84A1}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <grid grid-overlay-mode='on' />
      <simple-id uuid='{1FD921CC-06A0-4226-BB8F-142ADEB5508A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29eXAk13ng+XuZWVl34b4bQDcaaPSJvptk8yYlUdR925JMaw7Zsmcd65nZ
      2NkIb8QGPbM7u+vd8YbnsGOs05ZlybYki6R1NEmRIiWqyb7vbnTjvm+g7qqszHz7RwFooHFV
      A4WrUb8IiY2sPF5lve+97/ve975PSCklOXJsUZT1bkCOHOvJmgqAbdtZvZ9lWVm934NE7t0s
      ztT70dbyodnWtraa9nY/39e2bRQlN8EvxNT7EdmwAaxUgtvNd7A1D3sad6IIMJMxbjbfxl9Y
      QU1lCVJKLMvK6o9iWRaqqmbtfhsdKeWWE/rVJiszwHBPC56yOrSRG/SFtrMtT+X2zRvU7jlE
      67WLVFaUoE921Gx3WE1b00lsXbFtO2PVRkqJEGKVW7R5mXo/WRmO84pKab9xgeaBGMW+9C1j
      piTg1HA7HCSs7Or+OXJki6wMn4PdXdQfOIY+3kznUJhyryDPpTIcjhNNGri3kJqSY3ORlRmg
      prGJ+HA7QVFIQ5mHaDTGzj0HGO9po6quEU3NTcU5NiZZMYIzJdtGq2maORtgATaTDTDVBdey
      vVm1AXLkWAkxI8FYNLguHq6tM3zm2LA41PXrhjkByLHu6JoDXXOsy7NzKlCOLU1OAHJsaXIC
      kGNDYkt7TYzinADk2HDYts1YJEjSNBY9T0pJOBElmUou+1lZMIIlPe0tjIXjSM3Nwb0NAIwN
      9dIzMEp+SQU1FSUrf0yOLYMQArfuRFOW7p6WbWEry19byoIACLbtaKDKNjlz7tL00a6+IQ4d
      Orzy2+fYcggh8Do9GZ2X7wms6FlZc4MOdbVQVtsw/bff5eDSpYs4fYU01lVPh0NnU6/baps+
      7jccejOGTpu2hUAAkmgyjqoos4QhZsSxbBu/y7viZ0kpsyMAUlp0DUU4cjyAlDZSpmcFXXdw
      9twFhFI7bWzkwqGXz4MaCgF39fnEpD6vKgrW5A5Cp6bjmFwnSKaMtIGMB0Us34Sdej9Z6T1m
      IkplbR2qEMQmBhlNurHCfQQjSaq317N5foYc64Vl29Odf+pvIQSKUFBn6Pj5ngASuaLOP5Nc
      MNwm4kGeASzbYiwSRJLujqqiUuANIBCr8j1ywXA51pxkKkncSCClxLTMWTaKIhT8bi+KUNAU
      lcDkv1dbiLfO8Jlj3Ykm49jSRlM1JmJB/C4fLocTSHt0XA4nTk0nZZnYk0KirXKgXE4AcqwZ
      frcv7XlRVAJu/5woUMu2CMbDWHZazVOEQoE3L2v6/nzkBCDHNFJKLNtCVdRVUT1mdninps/5
      PJkypjs/pKNExSq7UHI2QI5ppJRMxEKzvDFryUx1x+Vw4nf5cjZAjrVDCEHA7Vt1vXsKKSUx
      I4FhGShCwaO7yXP7SVkmzknbwLZtkqaBYaWQMu3+dKgaTocTJQvCkXODbiIeJDeolJJIMjZr
      thGT/z/lCtU1B+akQXwvilDwu7w4NG1ZalLODZpjXZEwJ9pTwnTnBzDM1LydH9Lh0sF4GNM0
      V9SOnADk2NSEkzEMM0XKTC3r+qyGQ4+G4jz92EMADHa30TM8TkVNPZXFeSt/TI4HCkHaE7RS
      g3vKdaoIQYE3f0m7wDAN9BkeqCzMAOnAt32NO/B5/dNHuwZGOXr4EL0drWy+mMQcq40QAp/T
      g0d3oykquupYkc2iCCUjS0C/x/2aNQuy7U4LO3ftm/5bKIBQ0yaNbWPnwqFXzIMYDu3RXXh0
      FwCmbRJJxDDt+/tdnZqObzI8+n7fT1YEwE7FmUgq1Ht0jFiQcMqBsCzGx4YQDjdCUXLh0Fng
      QfIC3YuUkkQqiaaqqIpC8j50ekVR7tslOvV+slYfIGEqeN06ZjJK3NLwaDadvYNU19TgUNPd
      P+cGXRkPsgDY0mY8GgQBboebaDKW8bV5bv995xXKqgBkSk4AVsaDLAAAppV2aSqKyng0iC2X
      TquvKSr5nsB9f9fcOkCOrCClTTweJx5PYMu0vWek0h3Ztkzi8fQWxlTKSNswtkXKvCvEtmWS
      SKbXA1QhMM30RhiPpiMlpIwkiXgCa0aNCdsysSwbgcCl6iAE0rZIJJJIObdNlpkiHo+TTBqz
      2memDNQXX3zxxbV7WTKrJZK2Wh2s+zWC12IGSIR7+ep//y5DQ93c6Z2gOk/yT7+8wq5thfzw
      +9+nrbMLqedx+u3XKKupJTrcyq8v9VG/vQKAG++9yY/eOMu+A/uxRlr4P/7zX3P4+HFu/fqn
      6BUHePMH36Kzb5hrV25SuWMHLodK781z9ERcNFYW8vJLp9i9bw89N87y7X98nT0HDkBsmK99
      /W8YGOihbSCMNXSDH//qCneuX0Lx5vOL199k997dvPrKS7kZIMfKqd19iI9+5MMER/qmj3Xf
      ukTVgcf51Cc/yf76KjAT3Gq+ya3Wdu6O5ZKusQTPHd1OW88oAPv3NnD2/FUAHKoDX34pn/jk
      Z3jfw7u41dyL2+HEq+sEh4dpbWkjmkwby63dI3zs2cPc6RgAoGZXEx/78POMD/YA8PBTz/HE
      iT30DUV5aF8lP//5G/i27c0Fw+VYOa3XzvAnF3/J57/8e0AQSM/Oqjbb3lNMsE2Qk4eN8BC3
      79xhdMSHXmyx81gZ+RV1qGPtTAiTKkCItJvT7/bg1Bz4XF50VSOZSBCNObBsCVac69dv0D88
      TNJVxv7KQ7RfP88PIyM89tTTxDvO8vapl9hWVckzTx/Gp9v88r2/4TNPP5ubAXKsnJ37T/Dl
      Fz7B+ffOkJrU1Wt2H6Tt3JucOnWKm+19oLk5cuQoB/Y2oJJW59qab3Lig5/gE7/xOXRjGMOS
      IBQeOnGAS5dvAWBEJvj5a6c49avrHD6wc/qZtfV7OHL4EAG3zmDrdQ6+77N84YV/RqkWI2HD
      jn1H+Y3Pfpq6ymIAnnju43z8Q+/H73YgVJWALw+HI0tlUjMl5wVaGRvRC2TbJvGEidftJBIJ
      oztdGKaFz+PGNBIEw1H8gXxSRhyPx4ttpUimJIoGoxMjqE4nmqKQiMcpCRRiSRWPy0FwfBxv
      XiHx8DjJlI0vkIdLT//WqWQcSzhwOVQi0RgOTSA0F7qmkIhFUHUXhpHC63EDYCRioDnRp2ck
      STQSxePz5QRgM7ERBWC5jMeCs3Z/AbgdrowywmWDnBs0x/oyz7gr1yFqLCcAOZZNJLn8zMxT
      O75mHZtnn/BqkxX9IRkZ58adDnz5JTTs2AZA2+3rRBJWLjv0JkRKiURiTqpbmqrOm6BKUzSU
      ZWZmdjvSAXBJ00ARArfDlVE26GyTlf0AzbdbKC3fRiC/YPro8MgY1TsaKCktWvkjtgCWbRFJ
      xshz+5c+OYtMdfapDi6lJGkaxIz4tEoiEHh195xR2zXPKJ4pQgg8uhuP7l5R+1dKVkQuHA5T
      tk3l0oULnHzsJCqw/0AT0WiU8xevcuLIgVx26CV45eqr/M2ZH/KXX/gT8twBUpbJ3517iRsD
      t3l+3zM8Xv9QVsOhJenoy6RpTJ+nqRoORSOWis85N2LEUBRlXUbp1SJL4dCCsuJCkraCpqoY
      0QmiKZ3oxCh5gQACmQuHzoDj2w8jgXxvHqqi8uPrP+drp/8WgPPdV/jGb/9/VOdXZsULZEub
      cCIyJ+4+ZaVIWQuHISdSBn7X+lRzzDZZzQ69c28TA7097Gs6iMNh41I0fCXFDIxMcPhQUy47
      dAZsK6hgW0HF9N/9wcHpfydNg7HoBNX5lSt+TjoVSfy+N50A2HLzzbj3qnj3khUvkBAKFdtq
      CHhdaLoHn1vH5Q2wvbYGXcs5mpbDhw+8j4pAKQAn646xt2IXwLyJZe8HicRYovbWQtybotCW
      9pJtMcwU4UR03XanmbbJRCyEtUBodW4hbAOTSCUZi45THihFURRs2yYYC5E0DVShkOdeOA5+
      IRXItEyCifCy2hNw+bCkjWEa+Jw+gvEQtrRxOZx49fkXsAzTIGka+Jze+1qYs22bqBHDljZu
      h3vZhbRtmU6s5dKcs56fVRUox+rgcjipzC+f9zNrsozoWqz2CtIeG4fqQLEtFE0gpT29YeXe
      Fd2Z6Jo+vRFdSjmd4U1XHYuGskdTcYxJeySSjFKg5i3ruypCmXa5zkdOADYZbocLgUBTtWV1
      CFVJ+/SXWnX16O7pTAuaejf7mqqoqIqKlBKv7sG0TFz63Q4mSXv7EGnBiRoxAi7/ZCa46HSn
      jguB1+lFV+cf2aW0Z91zSo/PNjkB2GSoirrieBmXw0k8lVjwc0Uoc1SGe5nK58+MtYApAzth
      Jqef43Gk/fyWtKc7P4AtJeFEhIDrbpr0KW1cCIHH4SZsp20Ht+5atZkuJwBbDCEEDlUjvoC3
      UxEC/33q61NI5HTnh7QNMyUAC93NMI1ZadNN28KhamiqRr47XQ9MCLFqadJzArAFSaTmeoE0
      RcWhOnBpzkV185SVQlMWUr8EihDT+TynUpXY0iaajKEIZdGN7lPCOfPvXH2AHMsiZS2WNHa2
      /q8IhYDLn9b7l9hjfe9KsGlbGJOryUKA1+mdthN8Tu+0LeDR3XOM0an0iOtJbgZ4QLm3/NBM
      XA4XKcucNoQX85JMeW5SloGqqLi0u/q4ZVuEEqHpe7gdbhyKRsDlm71mINKG9FTlGcM0EELg
      1JwrrkWQskwMM4lH9yxLbcsJwBbEoWrkuQOYtomqKKhi4ZJIKStF1Iim/7BS2LY93dlmziNT
      ak8ilSBhJuf18NjSxqnpWR31hUgvxC6XrKhAI33tnDl/kTvtPdPHblw6y/nzZ7nW3JmNRzxQ
      XOi5wle+9294r+P8urVBVRScmj5Hn5dSYk/6+KWUc2KDUvZd1UoVCl7di0tzTc8ima6qTj3H
      sAwMy5h+3v2iKRoe3b1sL1FWwqFb2jvx5xWlxXGSmCU4dvQo586dx5Y1ICW2vXSmr/vhfrYI
      biRahlppH+vk9lALh6sOEDYiaIqGT/cuet1aJMeNpeLToRLpxSoVZrxidXK0nbq3rjpgcqS3
      bAu3wzXtQr33+YpQpo8lLYP4PSHXbod7TW2CrCXHVVQnjXv3censWVLbq5ie+CSTRtDkP0V2
      q35n+35rxccPfIhdpfVc7r/G733/XzORCKEKhbqiHXz+8Kdpqty/Lu1KmEmSM9yYScvAJZy4
      NCeGlUJV1Gm35r1Y0iJmxPE7ly5sZ9omMWN27k+JJJaKoa5xyHVWYoFG+9pp7R/HRqOproTh
      hJvUeAfBeAp/0TZ2TWYBy8UCpYmnEvz7V/9vLvddnfOZKhT+1aO/w/N73j/ns9XeFB9KhDHt
      2d4jVVHJcwWWfBbMn4nOsFKzbAFbSsLJ8ILhEw7Vgd/pu692L4eMYoGktLFMCwmoqoaizP9C
      iyp3UFS5Y/rvWoCKQ1ls7oPF9y//aN7OD+kV0788/U2aKvdTlVcx7zkziRnxdIGJLKgO8xWk
      XqpItS1twskIUkp8Tu+c0fteQziRSiwaO5RtNXkpFhWAf/jGf2HQcON2KDz87EfZv6Nsrdq1
      KbClzVB4mFJ/ScbVzE3b4me3Xl/0nKRl8PrtN/nS8S8seT9lETUwrWqkBcTtWNpQdDmcpKzU
      rDghl7awixTSev9Uh05Z5pLqi7XEnoK1zvW6aGt1TeehR56lMuAkrzB/rdq0aXj5+k/5y9Pf
      5Hce/hKfPPDRjK4ZjY4SnPSdL0bbaEdG93Mt4sNPmklM28S0TZyaE1Usrn5qikbA5cewDJDp
      319dYtO7pmjoqo7ExqkuPQs5FMeiu85c2vL3GS+HRQVgV9MhLpx9m1aXj4cefxa/Z20bt9Ep
      8RZR6iuh2Fuc8TWaomW0uJ+NYtUOVcewUmhCy3iGUhUVt5L5RvV0ra/FvVczSXt50otrlm3N
      8QI5FogOXS0WfcujPe1EpE684zaxk8+sVZs2DSe3P8Sx6sPoGYx8UxR6Cijzl9EX6l/0vL1l
      jSttHg5FI9+VrtA55ZY0bRNb2unY/hUsIC3FQoZxOorUhVNzplOvTKpP2mSY9lqz6Bto7ern
      8aee4UhjJV3942vVpk3D1HL+/XhbhBB87tAnF/2xCz0FvH9X5gOOlJL45Arsvc+a6So2LINI
      MkLMiBFOhFdtm2I69j9CPBVf8BlCCBShoKuO9HqDUNbFpb2oAHz2C1/k+uk3GNdrePZI3Vq1
      6YHn2YYn+cSBD8/7g+e78/hfnvk3BFyz8wNZtkU4GSZlmUSNKOFkmHgqnl5BZTIEYZEYf2CW
      7m3P2NG1EmxpE08lCCfDhBIhokZ02u4wFw3I2xjMvw5gW5x64xcERIzLd3oBOPn+T9C0c/7t
      eZmyFdYBlspCMIUtbS71XuVU8+t0jffg1JwcqjzAh/c+R7G3aM613zr7bUYjI7xw9IuzjitC
      we/0Y8t0yaApo3W+dYCkmZxegFKFit/lX7SNUqYXp5DMG2yWdoGG5wiSEAKvIx0Vuppq1kpY
      fB1AUXnufc9y4cI5/uXvfJjoUAcj9vqGrW4WRmNj/PGr/4E/ePT3aSxdWI9XhMKRbQc5su1g
      RvdVhJizSAXpTphIJfAssCl9Jk7NOR2T75hRmNqWNgkzga6mY4NmjomWbc0b4JPe/RWbdxZJ
      Z5dL4l0itGMjsKB4Xjv7Nn/+53/O17/+Df77X36d7tHlZRLYarg0F42ljQSWWD29X56oe3zB
      0XQ+wVgIh+qYFoQpDMsgeU8YRFq1kvicPnyuueENaQN24eeatsl6ZHu+XxbUH+r3H+Uznw5z
      +NjD6A6NQGDhHzQRHqO5rQe3v4BdddUAjA/10T0wsuWS4/qcXv7g0d/P+n0Xi3dfqfGoq/pk
      pgZ9+n62bRNNRtE1HY9j7uwypeothGQycG+Dh2otOAO43F56W2+jeAL0XX6Dn55tWfAmfV1d
      bN9zYLrzA3T2DdLU1LSlOv9iWLbFq82v8rX3vkrnWMd9X1/iLeZAxfxBcvfjhp2JlBLLtjAn
      jeOkmSBqRIkZMQzLSHfwBfr4UtsVBWLD6v8zWTQY7lc//i7nu2MYY/186Ld+n30182d67uto
      YSgYwVZcHDmwG4DWW9cIJ1I4/UU07tiWftmmSTY9XZZto26SMqnvdb/L1858HYBibxEvvu+P
      cd7nqqdpm5zrvcitoVtI0nE2T+x4gqrA3JSJiwXDWdLiWv8FOsbbsJZQn4QQeHU/x7edpMAz
      +/dvHrnNe13vzXvdwzUPs6u4IbMvtg5kFAx3/KkPEn/719g7t1PgXWiFTlJcWUNFrYOz584i
      pY1EUF3XgMPh4Oy5C4idNSiAbSZRsqgXSmmhkN1ku6tF0ohQl5+unaApGoYZwa2pWLbFjcFr
      XB+4SjARxKt7aShu5PC2o3NGdl2BR7Y/TFV+JRPxINX52yj2Fs+fAW4eD5lEMhjq5zvnv0rL
      8K370tHfbPkpH93/WZ7Y+f5pT9PuskZea3mN0x3vzlrRPbn9ERrLdy17ZloLpt7PojPAN/7L
      nxDUiyglSM1jn+PxfdvmOUsy0N3B4FgIX0EpFQHBSMKNHe4jGE1SUrWdypJ0HFEqGUMR2U2P
      nu1s06tFMB7k7y7/HcFEkCNVR3im/hks2+Kl6z+kdfTOnPPLfOV8uulz+Jyz1wPUDD0r9wqA
      lJJr/Rf5xnv/lXgqtsiVi3O0+hF++/hXcE4GyUkpuTl0i+sD1xEI9pXvZXfp7g2/TyMjAXjl
      e98mv3IbZ3/9Nk3P/TbvO7xjoVMzYisLAKQXoqbcg0II3mn/Je90vL3g+Y0le/jYvk/O6kzL
      EQCJ5FrfRb56+s8wrOWVNJrJwcpj/MtH/sc1H+HDyRDvdp7mkdqTcwaG+2Xq/cyvAtkW/3Tq
      dRz5hRx7+DEOHT6O17fxfbobHYfqmA72SlkprvRfXPT8OyPNhJIh8ibjeQBuDl7nO+f/Ckva
      fP7wCxyoaFpytB0M9fPNM/8tK50f4HLfOV6++nccqT5J90QXT+58Oiv3XYpftb3Ndy58Gykl
      H2j8YFbuOb8ACEFi4A4/+PlpLl+5iaYKnv7ob3JkV1VWHpoDIsnwnG2B92JLm5Ho8LQAGFaK
      r777F4xEhwH42nt/wf/14T9ddBHMsi2+c/6rxKYyO2SJN+78jLhpYNlyzQTg5PbHsKTNw7WP
      ZO2eCwiAwmf++R9Qs+sAu5qO0NHazp66pXcn5cic6eCvJTRCczKbcto3bxFJ3l2QjBlRTHvh
      2HpIj9Z3hm9lo8mzsKVF70Q7/+7Zf5/1ey9Enjufj+z9WFbvuagP8eK5c7xz6gf8/PVTvHZu
      4XWAHPeP3xkg312w4OeaSP/vVPMrvHTtH4gkIzgdLj64+8MoQkERCs82fAC/c/4FSomkZfgW
      P7ryXTJPVnJ/dIy10DrSvCr3XisWdYPuqd/G6xe7efbYTlwFa1u98EFHURRObn+MV67/aI47
      UhN3V3ct26R9rIWf3XqJTzV9gU8e+Cwnah7BljbV+TXz6v9SSt7tfJvvXfjGklsQV8qZzl/R
      ULJnVZ+xmswvANKmu7efnfuP4q9Ml+apKssJQLZpLNlDsC7IOx1vT8fVCOYPbeie6CQYH6fY
      6WNbfvWcz2fSNd7OP1z6q1Xv/ADNQzeQUhJKBPE5/UtuodxoLDADCNxuFx1tXVTXNhAb62Ui
      kqQ0f/XTVWwlhBCcqHmY+uJd3B6+RTAxQTQZpmuibd7zk+bSXhwpJa81v5Le17sGhBITXOo9
      yzff+3NO1D7Gbx378po8N1ss6AUa72/nm9/6ax578lnGOm/Q8MxvsWtbruj1YtjS5nr/JYYj
      AxysOkaRt3TJa4QQFHmLeMT7KAAj0WH+9nznnNHb7fBQ6F36/RtWktaR28v7AssgNRlJ6tRc
      uBZImrWRWdAGKK2s5cknnuTQkcO4Tp6kqjLnBVqKzrE2ftFyCpD0Brs4WHWMncW78eqZz5xF
      nmJO1DzK6c67C2SaovF0/QcyWnhKWSkS5uI7w7KJRFJdUMsfP/+fHiwByCss4cSBnfzjyy8D
      Nk997Ascrp9fCMb722npD5GXXzgdETrU00b30DgVNfVUFufNe92DRtolmTZog/Exftn6KrcG
      r/Cpg7+dcbo/IQQP1T5KdUEtnWNtqIpKffFuCj2Zzb66quN2uImnsuv3XwhFqOiqE88m2Pwy
      H4u6QX986hfUNx3mycN1TEQX9jcP9A1TWllBbfVdAensH+Xo4UP0drRugm0R2aGuaBfHqk9S
      6i+fjnoNJSZI3ac+LoSgKq+akzue5KHaxyhaIOBtPnTNSWPpvvtt+rJxak78rs07wC06LD1x
      8hEcgQA/++l5PvDZJxY8r7axkWAowplzF3j8kRMACAUQaroeoW1jT2aHlmQv9d1ap9HLhBM1
      j3O46mHeav0p/aFumiqOoyt61rJYS3Pp3V9P1z/PxZ4zJMx4Vp65GGX+SjQ0zAzatZGY+j0W
      FYB4PI4jz48UDjzOhfRPycREkEBBIYrsxogFiaQcYJpMjA8jHG6EoqTDoRVlum5UttiIwXCq
      qvKB3Z/AktaixSeWde8MkgBUF9TywvGv8Ndn/yIjz9FKaKo8suESE2SKpmmLq0DnL13iF6d+
      xo7aUs43dy9wlqCkpJjBvgEOHj6CUDUcmsrhw4cYHYvQtH/3Rt8VNwvDShIzIivOmSOEWKSY
      3F2SZiLr+XmEEBysOMa/e+Y/UF+8O6v3nommODhR+/iq3X8tWDQceqjrNuduD7O7yo+nop7y
      /JXVp93o4dBS2rx09a8Jxkd4tO6D1Jesbp7+SDLEP17+Jk/Wf5iawvqMrrnfcOj+UA//8bU/
      um87JBMer3uWLxz98oaP/Z+Pqfez6AxQWrOLD73vUer2NK24828WDDNByjJ4u+XHRJOrmwnD
      7fCwv+J4RusFC5He17uw/l3ur+LZXR9a9v0XIt9dwEf2fWZTdv6ZLKq8tV19l5def4e6HfXs
      OPQoTdszTwK7GRFC4aMHXuBG/3kMK4F7lV17qqJxuPrkiu7x1p2XudD9Nl88/q8pC8wNkRBC
      8KG9n6J1pJk7wzeX9QwB6Gr6v4YNqnDwxWO/S94iwXybhUVngFdfe4uPPP804dAYLd3Da9Wm
      dUNKyVC4G5fm5GjNk9NZDSzb5FznG7x687v0LhCmsF70h7oYjvQTSkwseI6u6nz54T+ktiCz
      9JYC8E1uAVcFFDghoINfT//76fqn2V/+YBRAmd8GkJKkYTDUeZOXfvJzLHcJX3rhN8n3rGwL
      3Ea3Acaig7x89RuA5EDlSY7WPAXAzYFzvNfxKgBOzc0nD34F1zy5ctaCe20Aw0wwER+lxFc5
      Sx2Zb1N8NBnhr87+BVf6lq5OqQqwJOTp6dF/Jn5nAX/49J/i3IQrv1MsviVSWvzp//v/EDdT
      /ObnX8DtUBFZSKS60VEVbTJ1oIVjRtjB1FZCQXo2sNcgyjJTdM1FqT+znXpep4+vnPy3nO54
      i5/c+CFjsZEFz7UmxynHPDpCJDnBaHSAyvyV7RHfCKgvvvjii3OOCkF1aR6nz5xHUTSGBgfw
      F1dRGFjZqGdbqazmBZJSLrukjpQ2HaM3GAh1UOgpQxEKTs1NZd52qvLrqC9pmlaB8t3F9Ezc
      wbASKEJhd9lR9CVy+vROtHKt7zTVBbuW1b6FUDLciG7b9rzvRhEKNQU7eGT7U5T4yjDMJKFE
      cN7Q6VJfObpqY92z60xTHDxe/1Fcjs0Z/gB3388Cm+JtukfjfPKDT3G9bQCAhLH+K31SSrrG
      bjEU7qKx7BheffllmwbD3bzT9jKQjuLcV/EwQghK/XNTv7gcHvZWnOBsx+vkuYtwaktP/R7d
      T6F3/mzakcQEqqLhziBIrnP0JjEjTGP5sRVnWmsdvoJhJthTcQKP7uGxumd4dMfTGFaSkegQ
      oXgQU5p4HB6KvWX4nH7Odr7OT659a9amnUPbniDP/WA4RBbcE3z08EGcus6xxyXx0CgRuf76
      XjwV5t32H2PaKaLJII/Xf3rZ90ovUinpRF6TVcoXc+k1lByiMq8Ol+ZBy6CMj1PJNrEAABej
      SURBVEAwHu2nY/Q6tYV7Z9377ZYfEnAV8Vj9x5e8z7W+d4gaIbYX78O9whHX5fCi3hOUly7y
      4aIqr4aqeUJ6Tmx/P26Hl/Ndb2LaKfaUH+ORHc9vevfnFBnVCW4/9zPeDVbw+WczS+W9ECs1
      gg0zwU+ufYOoEWRX6VGOVD+7bCNYSslAqINft6S3JB6peR91JU3Lbtu9vH3nB/SM30bX3Hz0
      wO/inGE0j0cH0VQdv2tpN+JEbJikGafUX40QYtmJsQBGI738uvVHRJNBGsuPc6j6WcQmyN+5
      GixuBANX3n2DX19Kb6xIJaIceXaRfZ9S0nLzLP1BD48/kl49vXTuNIruzWp2aF1z8dze3yaY
      GKXEt21Fe72FEOS5i7GljWkbDATblyEAkqSZYCzSi8eZR8B1N2qz2FdF30QrBe5StHv09gJv
      5uVm8z3ZeXcxI8Tfnf0/CSVGAegYvYotbY7WPpeV+29WFhSApoefoenhzOpUxULDpPQAbu2u
      p8hMmei6wOvxpFNpZynexa37pnXnlUZYuh0+mrY9wVCokz2VD9/39eHEOG/d/i4xI4RA4WD1
      0zSUHkcIwZ7yh6gp3I3b4ZujdqwHPePN051/iht9v54lAMPhLk63/hCBwsn6T1Pke/DzQK38
      l5GSs2fOUlBZQW/vMPsP78WlwbFHHse2Upw5f4mHjh8DwLYlkuy5ELMRDl1fcoT6kiPA/QtU
      y+B5Yka65q/E5mb/u9QWHJge8d2aH+TKBXUmmYRDw9xnOsTcesJOzTMdxpyykrx88c8Yi/UB
      MBLp5QsnXkRV1rZs6VqRUTh0pjz69AeQMk4q7sIK99OZcJMc6ySesvEGCkEIFCFQFIGyRLFm
      SOvnofgwHmceDnVxd+O6hkPPsWckUtgMhu4Qig+jqU5KAzvwuzLf0GLbFqH4AKPhNsLxQZJG
      GEuaaIoDl56H7iqgquggAU/lvF4hw0zw2vWvE00G+dyJP5o+XlO8h11lx7k9eBZId/5H6z85
      bSckrSjBxND0+ROxfhBy04Y6Z8KSyXGzTaZGcMpKcOrqV6kqaKBg0pVYGtiBR5/tpljv5LjB
      +DBvNX+XhBlFIKgp3EssMUwocTdsRBEqO0tPsLty4RJHkM60NjB+g67hM0QS84ed2NJiONqJ
      QFCWv4f9tR+jomDfLEPWtAwud7+B2xFgb9XsOCPLNmkbvkzMCFJbtJ88d8mMOmEWP77837g1
      cBqAfVVP8Pz+rzywRnJG2aGzTaYCIKXk9sBpmgd+hZxcgdZVN8fqPk6Jf/v0eZkKQDg+wsWu
      UzRWnKQskM3VS0nMCDMS7sbp8HC95+eEE/Ovrh6sfo7tJYfn/SxuTHCj+6eMRzoXfdqUAEwh
      hMqOspM81PAlHPesTcxNj24zHO7C7yrCrc+f4yllGbQNX0QIhbrig3OM9weJjMKh1wtbWvSM
      X5/u/ACGFedq9+sLhv5atslouItYMjjH4I4aQcajfYRiQ/Neu3wEHj1ATdE+UmZ8wc4PcGfw
      vVnfZ4pgrI+zd/5myc4/H1JatA38klMX/3ei9xi493K27SW+9+7/ynff/SPixvxh3g5Vp7H8
      IXaVHX+gO/9MNqQAJM0Y0eTcyvSR5BiGOTejsi1tzre/xDt3/pZf3Pw649G+WZ+XBep4dt+X
      2Vl2fNXaHIwPLvp5IhUheU+mhmhilEvt38cwIyt69likgzev/ilxI7jgOaPRHkASS04QT+Uq
      fk6xIS0cTXHgUJwY1uxN3Q7ViarMHZkSRpihUDsApm3QP3GLwhkuPCEEPufsRae4EaJt8F2C
      sX50zUtN8SFKAjuXvcK5lLdECIEywx1qWgbXul4hNY9AL4exSAenb32NZ5r+LfOVZnxo56dR
      hUZZXh0FnlyOpyk25AzgUF3sKD0653hdydF5vUJOh5c8T3pXlRAKxTPshPmIGyFO3/42XSMX
      CMb6GQ61cL7tB3SNLF6wYjFKAzsWrZpY4K3Eod4tK9Q1fJZwfGDZz5uPntELdC/wHQq9lXzg
      wO9zsOa5ByaMIRtsyBlACMGu8pO4HD56x9K7mLYV7qG6aP5qKKqi8dDOzzIwcRufq4gC7+IL
      OG2D75KcowZIbve/RVXh/mXpvwWeCmqKmugcvTznM03R2Vf51HTbU1ac7pFz9/2MTLja8SOq
      ClcWsrKV2JACAOmw3e3Fh9henNnOI11zU1Oc2Q8fjPXPe9y0kkSTY+R55o/iXAwhFA5Uvx+X
      w0fr8DnMyT0EBd5K9lc9M+ueQ8FmUtbq5OwZDbczGm6jwLv5Y/XXgg0rANlEynRM+5T9oC24
      uCbQMwh1XghV0WiseIyG8keIGyE0VcepeefMWsPB1UteK7HpGb04LQC3+37Bzd7XeWLPVyjw
      LZ5WfSvywAuAYca42vkK4fgglQUHqCk5Siw5v8uwJFCHyzF/xZVMEUKgCg2fq3Dez6WUC85A
      2WI4eGfaFTwYvM1ouJ2JWF9OAOZhQxrB2SQY62c03E7KjNE9cg5b2pxs/Bfsrnpmluem2F/H
      gZoPrbqBaJhRrFXO3R9NjmLL9HrJifov8uEj/xu1JcdW9ZmblezMAFJy58YZ+oMenjh5AIAb
      l84St8DpL2X/rtqsPGY5BNxlODUPhhnDpefj1DyoqgOBjUPYqAoU+us4uP1Ts9yUq4VpJe+r
      Qvtyn2FLi3BsgFCsD4+zMB06nnP+zCErv3gsOITpyscTuxuBGLMEx44e5dy589iyBtYu4mIW
      ToeXY/VfZCLaQ5G/DlXVMcwo7YO/QmIjhGA80s5EtJtC/+objpkEA64UIQTXO79P+8Cb0xv4
      q4qOcqLxd9E38T7e1SAr4dDvvXeG/PJyurvvhkPPRJAegNYrHNrlyKc8P71/2LIsUqYxJywh
      ZSazG7YsbQbHr6MoGiV5u6dVK1VxIoTIej7QmSSNIK39r8861jt6nivt/8Chui+SmwqyHA79
      1Ac+gpQxhN2DPRkOnefSOH/+HIGibQghJldCMwuHvh+WEw3qUfIpy9/D4MQNAPzucooCO7Ia
      WTo00UxL/ykAXLqPgsnFOUVx4dYLFjTEs4HAZr5O3jd2gSP1v7Umqt5mYNEtkRkjxGRlQy+H
      DjcCUAtQsXEzhwkh2LPtQ5Tn78OyDQr9OxZxjS4PTXUjUBBCQZ1xbyEEhb7aVRUAh+rGtueW
      SZLS3jLFSjJlyw4FiqJSFMgsVeByKPBt53D9byGEitc1e19vecFeekYvrMpzdc1D47bnuNn1
      ozmflRXsXxMbZDPxwLtBF6Jz8Jdcaf0bjNTKIjEXQgiB31OBz106x7Wa56mkwFuzKs+tK3+c
      /bWfoKb0JDPVoCJ/PYfqPp+LA7qHLTsDhCLdRGIDGGYE3bG8+sdJI0Q0MURhILPc/lMIobCz
      4gkutH43q2kWXY4AB2o/jqJoHKv/MvUVzxCM9eB2FlGWv2/LxPjfD1tWABprPo5hRvC6lp+b
      37QSJIyxZV2b56mitvRh2gffWfbzZyJQeKjxn+Oe3DYqhEJJ/m5K8levQsyDwJYVAN3hXbFP
      3OsuxetengAJIagre4yEEaJ//OqK2iGEwtGdX6CmePU2/DyobFkB2AikvVEfRNc8dA2fWdYK
      saY4Od7wAvUVT+X0+2WQE4BJorE+xkPNlBYdX7ZNsBwURaW+4inyfdXc7n2duLFwoYt7Kcnb
      xYmGFyj07ch1/mWSE4BJegbfIhLrRgiVqrKFayKvBkIISgL1FPl2MDhxk77xq4RjA5j27BKn
      AgWXI0BpfiO7Kp+houBAruOvkJwATFJSeAghVAoCjevWBkVRqSjcT3nBPlJWnHhygkQqhC1N
      VEXHpefh9VasaM9CjtlkJS9QPDJBW0c35dV1FOWlDcvx4T66+0dmJcfd6CWSNgMryQ6d4y5Z
      zQtkmDaNe/Zy89ql6WOdvYM0NTVlLTN0jrVBShvTjC594gNCVoYIr8fF1fNn0GaUzfQ5NS5d
      uojLX8SuHduQUmJLCQvUGovFu1FVD069KOPn2ra99XTgDCNWbdteVnRrJNpBZ/cP2Lf7f7rv
      azcTU+8nCyqQxLYlAsnZs+c4euIECpBKpXA4NM6du8Cx48fSNWaTMRTmEwBJS9u38LgrqazI
      PF/9lApk2ykMYxyns+SBFwglw+qUy1cPJbZtoCjZDQ7caEy9n6wIQFfrbcajSZzePGqKdEYS
      bqxwH6GoQUllLZWl6ZlhMRvANKMIxTFv4qvFvoSiQGfn3xOP91JQcITy8sxqGiwXKS0S8QFs
      mcLtqsy4aF22yNkA2WHJCjGZI6jZ2cjM0K4agPL7K2CnactblZXSIpVK5+g3jLnpFLOJlBb9
      va8QibQAoOvFVFV/CscKN9LnWD82fTSoEA4qK5+nsPDYqo/+kXDrdOcHMIwRxsdWJ8FVjrVh
      08+RQgi83hq8qxRePBPTnJtUdr5jOTYPm34GWEs83lqEmD1meL0716k1ObLBpp8B1hKns4iK
      qo8yNvIutp0iL38/gby9692sHCtgQ1aIyZTcSvDC5LxAi7OhK8TkyLFW5AQgx5YmJwCAZcYY
      G/gpkYlLS5+c44EiJwBAMtZFLHSD0Eh29ufm2DxkxUoa6GlncDSE5g6wb1c6v+ZQTzvdQ2NU
      1jRQUbyxV0pd3u348o+gu8rWuyk51piszABlVdvZv28P4fG7BZ47+0c4evgQPR0tGz4bmaK6
      yC99Gk8g59LcamRlBrBSca5duQYzIhWFAggVgUTaNraU2LaNnDcadHlkmhz3QUKa89dJvpds
      Jvp9EMliclzJ+HiIxv1NXLpwkXgsSNzUwTQJTowgNDdCUVAAW1FQshyuvOXWAe7Dt59bB1gc
      TdOysxAWC4/T0zdESWUNPt0mbmp4HTbtXf3U7NiOrqY1rdxC2MrJLYRlh6n3k1sJ3mTkBCA7
      5FaCc+Qgtw6QY4uTE4AcW5p1UxKlleTSpRsIp4f9exoY6u1kPCHY01DLUG8nI1GbPfW13Lp2
      hbitsW//XtwOFZD0dfVSWrON8aE+hKcYJRlE93hobm7F5S9gT0MtioCenl4qKyvp7R/AYSfx
      FFcTDw7jcTuJ2zpuGcPU8/BpKYZDKSpK8rh59TJx28G+vY203rpGwtbZXlWMcAVIhUYJlFXi
      1nLjxoPCugnAQOs1+qMK0ZvnMeKjjCecDHc0I5IjdIzaBDvv4NUTnLvVi9caw1++ncYKP+N9
      7Xzv+6/zO3/4O7z71mvI8iM4Y/1UlfiYkIX0nf4VldVV+Ily7koLz/kUrtzqZOzOGWof+Sih
      7maK3BJnzUGGmy9w9Mmneetn/0DUs433HdrBje4QPqOfy3aK3sEIrlg3yfh2+kZjBPLyeX9l
      1Xq9shyrwLoNZVdv3GF8oJPShv30dA7w5MP78QbyuX2nm6cePYQrL5/eO+0oxghK+T4ayn2Y
      yQg/eeMMlWVe4qExRGEdkZ5rWHqAjr5xHj1cjze/EL9To6+9haqdDdy+fpOq8jzKdh2k88q7
      OPPL6B0OMdZ5g56QxfDF7zMc6sQce4/Lv36JSGgYUbADY7iH0MQgWnE9B/fUMDoS4clHjjzw
      aVe2GusiALYRIemq4Auf/ThPPrQfOxnmn175GXsOHUMaEX78yk/Z1XSQsaTG80+dwO3QUZCc
      +fW7bG9oQAhJe3MLtbv24VEMKqtKaOvs4Z9e+Rl7Dx1FUwTxeIIrZ96hL+WD8Ah7Dp1ARkep
      KvFSULuPQw1V1FQWcL2zi+oCDYnNQNTgS5//DM89eZRxQ+dLn/8MH3jyBKN9A5x4/CTOnOrz
      wLGl1wGklSDZ+x2w0nXCFNc29IpPZ6t5q0JuHSA7ZDEv0OZFqC70so9gTpxDqE60/IfWu0k5
      1piszACjA930DI4hdC9Ne9IF49pv3yCcMHPZobNMbgbIDlldCfYXltHUdIBocGT62PDIGKVl
      FVSWZp7sNkeOtSYrM4CVinPx/EXKduyhuiydBzQcHCcajdLZP8rxwweQUmIacUSWw6EVZWsZ
      pqufHHdrMPV+shIOfe3SRbbt2kfA7cSITRBO6UTHJ8gvyAM5kguHziK5cOjskTUVaFvtdsKj
      Q/QNjqCoOrpDpaS4kJGxEIcPNZHznOfYqGxpN+hmJGcEZ4d1CofOzQUrI/f+ss2aDhGa7spq
      KIE0zfvSiTO6p5RIKe/LuM7EGF/snPk+m5qYZ76ve/dAT5WImjpntZ0C87VpKVbj3cx3/N7f
      bbF3I6WcPr6mKlC22YoqUKbk3s3CzBSWTS0AOXKslK3lRM+R4x42vgBISV9XC62dA9OHbMvg
      2uWLXLvVipQ2rc3XuXDxCoadzlJ38cIFxiLJdWz06mObSa5cvEg8niIeGuXihQt09N1NTDY2
      0M2FixcZGo+QjE5w8cIF2roHpt/d1VstbObJX9omzdcuMTQRA+DOzStcvHKdlGXT19nKhQsX
      CMZS0+e3Nl/j4uWrJE2bwZ52Lly4wFgksfEFwLZSePILiIeC08cG226RV70HnzlOz9AQUell
      f30xN2+10zUQ4uDB/bQ131zHVq8+yUQSv89DKmVy63Yb+w8dZri3Y/rzlu5+Dh88QGfrbW7e
      vMO+Q4cJDnXT33aLwLbd5NkhhmKbN3lWKhGnoDCPcMQgNdFFRC2loczDnZ5heocnONS0hzu3
      bgFghvsJ2nk0Vhdyp7OPzv4RDh/cR9vt5o0vAIqmkx/wzToWixn4fC4KAjojIyF0tw/Nm4cV
      GkY4nCiKBg941ji3L4BbTxu5NuBQBCh3vTOKIhCKhsAmBeiKQFFVwuEEPr+bPL9OMJKa/+ab
      AN3jx+tyABAPh/Dk5eH1+YhGJlAVHUVzI2VaC0hGI7j9ftweL/F4GFXoCNWJlKmNLwD3Mjo6
      QkFxHgP9Q3QPxtheU0p4bJCx3m58VXXY8RDxyATCmVnMzIOAS4WJaAzLlJhGjIlQDJkyicfD
      SMWJ36EwGo6RTJqUlhUy0DdIz1CU8oIHoxi2r6SC8d4u+gcGKSkuxzCixIKDaK4CQhOjaIFi
      Jgb7GB4aoqCgBNOMEQ+PojoCG98LZBoxmptbMG1JcUkxo+MxDuytp6+zFeEpoqIkn4nhfkZj
      Njtrt5GMTtDWPcSuxgY05cFdOJoYGaCzdxCHJ8DuHVW03GmhvHYnE72teCt2kqeluN3WQ11D
      A05V0nr7NkXbdpDvddHX1QbuAipLCjbtFs9ocITWjl4ksKNhD6nwEMGkwo7qCuKRcTr7xmmo
      38GNq1fZd7CJ0Eg/o1GbnbVVJGMh2rqHaGjYufEFIEeO1WTTqUA5cmSTnADk2NLkBCDHliYn
      ADm2NDkByLGlyQnAeiAlwwM9tLR1YNo2fV3tNN++Q9wwwTK4c7uZlvYuTDu7DrrOm+fpGYsx
      PDSy4eu2rRXqiy+++OJ6N2KrceWdH/P9V88RmxjAW7qdH3ztvxI1TV56+VWOH9jOn/z5X2MG
      +7jRl6CpsZb+nk66OtqxHX68Oly+eB7dX0R0fIjujh4CJcWoSJqvXyKc0iA+xqVrtykpr2Cg
      t5POthYcvkKkEQEF/vN/+jMCZVUUehTOn7+Ep6AEt741d49tzW+9zpw538rvfeVf8M7P30BX
      wZdfyac+95ucfuk73Okbp7y2gUcfqufUxX4AXn/578mra+Lv/+ktHm/MZ1gp5mdvf4vjNTpt
      sRJ27NvNpTdf4nSPybGDLkZCPbS3NHOrL0a87ZfsOHCYV966yKM1Nu59zyMnCxZ2t7fQ3d3C
      2xdb+J//hxe25H6znAq0DgTc0NEfRov2c71zFEhHN7b3DpLv99Bx6xK/vNzFZz/+QQBc3gIe
      f/Ip8jwaQyMjOJ0utm+vBuHiYx96Gl0IhoaDPPLEUxzcXcOtlh7qGuowojG8heU8+cQTeNS0
      0uP0FVJdtY3DTbu5eeMWNXU7wXywI2cXI6cCrQPb62p45e//lvbRJE8+8RjDbef4yWu/pP74
      sxxrKMf2lvEbH/8gHmc62OvCO6/y2lvvcuSx9/PIoV289cabaHkV1FcVU1RRjcupUV5Zyivf
      +zaDcR13cog7AyFqanYy3HKGt05f5tH3f4QC3cJfXo872cOrZ1qoL3Xy7pVWKrfVsH9P/Zac
      Af5/3nrS21yTgScAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
